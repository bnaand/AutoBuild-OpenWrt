name: Package OpenWrt for h28k

on:
  workflow_dispatch:

env:
  SOURCE: immortalwrt
  SOURCE_URL: https://github.com/immortalwrt/immortalwrt
  SOURCE_BRANCH: openwrt-23.05
  OPENWRT_RELEASE_TAG: ARMv8
  PACKAGE_SOC: h28k
  PACKAGE_KERNEL: 5.10.160
  TZ: Asia/Shanghai

jobs:
  Package:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android $AGENT_TOOLSDIRECTORY
        sudo -E apt-get -y update
        sudo -E apt-get -y install $(curl -fsSL is.gd/depends_ubuntu_2204)
        sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.eu.org/init_build_environment.sh)'
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get -y clean
        sudo timedatectl set-timezone "$TZ"
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: 克隆源码
      if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
      id: clone
      run: |
        df -hT $GITHUB_WORKSPACE
        git clone -q --single-branch --depth 1 $SOURCE_URL -b $SOURCE_BRANCH workspace/openwrt
        cd workspace/openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV
        echo "OPENWRT_PATH=$(echo $PWD)" >> $GITHUB_OUTPUT
        export VERSION_INFO=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "VERSION_INFO=$VERSION_INFO" >> $GITHUB_ENV
        echo "VERSION_INFO=$(echo $VERSION_INFO)" >> $GITHUB_OUTPUT

    - name: 下载rootfs
      id: download
      run: |
        FIRMWARE_PATH=${{ env.OPENWRT_PATH }}/bin/targets/armvirt/64
        [ -d $FIRMWARE_PATH ] || mkdir -p $FIRMWARE_PATH
        FIRMWARE_URL=$(curl -s "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/${{ env.OPENWRT_RELEASE_TAG }}" | grep -o '"browser_download_url": "[^"]*rootfs\.tar\.gz"' | cut -d '"' -f 4)
        wget -q -P $FIRMWARE_PATH $FIRMWARE_URL
        echo "status=success" >> $GITHUB_OUTPUT
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

    - name: 打包内核
      if: steps.download.outputs.status == 'success'
      uses: ophub/flippy-openwrt-actions@main
      env:
        OPENWRT_ARMVIRT: workspace/openwrt/bin/targets/*/*/*rootfs.tar.gz
        PACKAGE_SOC: ${{ env.PACKAGE_SOC }}
        KERNEL_REPO_URL: ophub/kernel
        KERNEL_VERSION_NAME: ${{ env.PACKAGE_KERNEL }}
        KERNEL_AUTO_LATEST: true
        GZIP_IMGS: .xz
        WHOAMI: v8040

    - name: 重整理文件
      id: reorganize
      if: env.PACKAGED_STATUS == 'success'
      run: |
        cd ${{ env.PACKAGED_OUTPUTPATH }}/
        ls -lh
        name_img=$(basename *.img.xz)
        kernel=$(echo "$name_img" | sed -n 's/.*_\(\(k6\|k5\)\.[0-9]\+\)\.[0-9]\+.*/\1+/p')
        rename_img=$(echo ${{ env.SOURCE }}-${{ env.PACKAGE_SOC }}-${kernel}.img.xz)
        [ -f "${name_img}" ] && mv -f "${name_img}" "${rename_img}"
        name_sha=$(basename *.img.xz.sha)
        sed -i "s/${name_img}/${rename_img}/g" ${name_sha}
        [ -f "${name_sha}" ] && mv -f "${name_sha}" "${rename_img}.sha"
        ls -lh
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 发布固件
      if: steps.reorganize.outputs.status == 'success'
      uses: ncipollo/release-action@main
      with:
        name: v${{ env.PACKAGED_OUTPUTDATE }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        replacesArtifacts: true
        tag: ${{ env.OPENWRT_RELEASE_TAG }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          > ${{ env.SOURCE }} for ${{ env.OPENWRT_RELEASE_TAG }}
          - 编译时间：`${{ env.DATE }}`
          - 默认 IP：`10.10.10.1` 默认密码：`password`
          - amlogic平台安装和升级：`openwrt-install-amlogic`，`openwrt-update-amlogic`
          - 默认打包`s905d`和`h28k`固件，其他设备请自行fork，修改对应`PACKAGE_SOC`和`KERNEL_VERSION_NAME`即可
          - 自用版：集成插件不多，只有小猫咪，可按需在线安装插件
          - 当前使用版本:【编译前的最后一次➦[${{ env.SOURCE }}源码](${{ env.SOURCE_URL }})更新记录】
            ${{ env.VERSION_INFO }}